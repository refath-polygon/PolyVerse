services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: blog-backend
    ports:
      - "4001:4000"
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - MONGODB_URI=mongodb://mongo:27017/blog
      - REDIS_URL=redis://redis:6379
    depends_on:
      - mongo
      - redis
    networks:
      - app-network
    command: npm run start:dev
    develop:
      watch:
        - action: sync+restart
          path: ./backend/src
          target: /usr/src/app/src
          ignore:
            - node_modules/**
        - action: rebuild
          path: ./backend/package.json
          

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: blog-frontend
    ports:
      - "3500:3000"
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    stdin_open: true
    tty: true
    networks:
      - app-network

  mongo:
    image: mongo:latest
    container_name: blog-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: blog-redis
    ports:
      - "6379:6379"
    networks:
      - app-network
  
  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: blog-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=changeme
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - app-network

  kibana:
    image: kibana:8.11.0
    container_name: blog-kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=changeme
    networks:
      - app-network

volumes:
  mongo-data:
  esdata:

networks:
  app-network:
    driver: bridge
